# Copyright (c) 2024 Thiago Alves
# SPDX-License-Identifier: MIT

# This file is a full configuration for the Keymap Drawer CLI that will parse
# my keyboard configurations, and generate layout map images that are as close
# as they can get to what I mannually created when this whole configration
# stater.

# Configuration for the "rendering" part of Keymap Drawer
draw_config:
  dark_mode: true
  separate_combo_diagrams: false
  combo_diagrams_scale: 4
  inner_pad_w: 4.0
  inner_pad_h: 4.0
  small_pad: 4
  shrink_wide_legends: 5
  footer_text: ""
  use_local_cache: true
  svg_extra_style: |
    rect.ghost { fill: #7b7e81; }

# Configuration for the Keymap Drawer parser.
# This is  where most of the magic will happen by replacing the standard
# symbols with my choice of graphical representation.
parse_config:
  # Set optional flags that I want Keymap-Drawer to use on all layout maps
  # generation
  zmk_preamble: |
    #define KEYMAP_DRAWER
    #define USE_MOLOCK
    #define MOVE_LEFT 1
    #define MOVE_DOWN 2
    #define MOVE_UP 3
    #define MOVE_RIGHT 4
    #define MOVE_X_DECODE 1
    #define ZMK_MOUSE_DEFAULT_MOVE_VAL 600
    #define ZMK_MOUSE_DEFAULT_SCRL_VAL 10
    #define MOVE_Y(vert) vert
    #define MOVE_X(hor) hor+10

  # In most cases I won't need these labels defined here, but I decided to keep
  # them so the default behavior of Keymap Drawer matches my configuration
  # better.
  modifier_fn_map:
    left_ctrl: "⌃"
    right_ctrl: "⌃"
    left_shift: "⇧"
    right_shift: "⇧"
    left_alt: "⌥"
    right_alt: "⌥"
    left_gui: "⌘"
    right_gui: "⌘"
    keycode_combiner: "{mods}{key}"
    mod_combiner: "{mod_1}{mod_2}"

  # Any key that is used with `&kp` and has a special representation on the
  # keymap, has my special representation defined here.
  #
  # Also, we need to redefine the entire map from the original config because
  # Keymap-Drawer does not doo a deep-merge when pulling my special keys, this
  # means that if we do not redefine the default values, we end up with key
  # labesl like `LPAR` and `BKSP`.
  #
  # NOTE: Although long, this is not an exaustive list of keys supported by ZMK.
  zmk_keycode_map:
    # Keyboard & Keypad: Keyboard → Numbers
    NUMBER_1: { t: "1", s: "!" }
    N1: { t: "1", s: "!" }
    NUMBER_2: { t: "2", s: "@" }
    N2: { t: "2", s: "@" }
    NUMBER_3: { t: "3", s: "#" }
    N3: { t: "3", s: "#" }
    NUMBER_4: { t: "4", s: "$" }
    N4: { t: "4", s: "$" }
    NUMBER_5: { t: "5", s: "%" }
    N5: { t: "5", s: "%" }
    NUMBER_6: { t: "6", s: "^" }
    N6: { t: "6", s: "^" }
    NUMBER_7: { t: "7", s: "&" }
    N7: { t: "7", s: "&" }
    NUMBER_8: { t: "8", s: "*" }
    N8: { t: "8", s: "*" }
    NUMBER_9: { t: "9", s: "(" }
    N9: { t: "9", s: "(" }
    NUMBER_0: { t: "0", s: ")" }
    N0: { t: "0", s: ")" }

    # Keyboard & Keypad: Keyboard → Symbols / Punctuation
    EXCLAMATION: "!"
    EXCL: "!"
    AT_SIGN: "@"
    AT: "@"
    HASH: "#"
    POUND: "#"
    DOLLAR: $
    DLLR: $
    PERCENT: "%"
    PRCNT: "%"
    CARET: ^
    AMPERSAND: "&"
    AMPS: "&"
    ASTERISK: "*"
    ASTRK: "*"
    STAR: "*"
    LEFT_PARENTHESIS: (
    LPAR: (
    RIGHT_PARENTHESIS: )
    RPAR: )
    EQUAL: { t: "=", s: "+" }
    PLUS: +
    MINUS: { t: "-", s: "_" }
    UNDERSCORE: _
    UNDER: _
    SLASH: { t: "/", s: "?" }
    FSLH: { t: "/", s: "?" }
    QUESTION: "?"
    QMARK: "?"
    BACKSLASH: { t: '\', s: "|" }
    BSLH: { t: '\', s: "|" }
    PIPE: "|"
    NON_US_BACKSLASH: { t: '\', s: "|" }
    NON_US_BSLH: { t: '\', s: "|" }
    NUBS: { t: '\', s: "|" }
    PIPE2: "|"
    SEMICOLON: { t: ";", s: ":" }
    SEMI: { t: ";", s: ":" }
    COLON: ":"
    SINGLE_QUOTE: { t: "'", s: '"' }
    SQT: { t: "'", s: '"' }
    APOSTROPHE: { t: "'", s: '"' }
    APOS: { t: "'", s: '"' }
    DOUBLE_QUOTES: '"'
    DQT: '"'
    COMMA: { t: ",", s: "<" }
    LESS_THAN: <
    LT: <
    PERIOD: { t: ".", s: ">" }
    DOT: { t: ".", s: ">" }
    GREATER_THAN: ">"
    GT: ">"
    LEFT_BRACKET: { t: "[", s: "{" }
    LBKT: { t: "[", s: "{" }
    LEFT_BRACE: "{"
    LBRC: "{"
    RIGHT_BRACKET: { t: "]", s: "}" }
    RBKT: { t: "]", s: "}" }
    RIGHT_BRACE: "}"
    RBRC: "}"
    GRAVE: { t: "`", s: "~" }
    TILDE: "~"
    NON_US_HASH: "#"
    NUHS: "#"
    TILDE2: "~"

    # Keyboard & Keypad: Keyboard → Control & Whitespace
    ESC: "⎋"
    ESCAPE: "⎋"
    RETURN: "$$mdi:keyboard-return$$"
    ENTER: "$$mdi:keyboard-return$$"
    RET: "$$mdi:keyboard-return$$"
    RETURN2: "$$mdi:keyboard-return$$"
    RET2: "$$mdi:keyboard-return$$"
    SPACE: "$$mdi:keyboard-space$$"
    TAB: "$$mdi:keyboard-tab$$"
    BACKSPACE: "$$mdi:backspace$$"
    BSPC: "$$mdi:backspace$$"
    DELETE: "$$mdi:backspace-reverse$$"
    DEL: "$$mdi:backspace-reverse$$"

    # Keyboard & Keypad: Keyboard → Navigation
    HOME: "↖"
    END: "↘"
    PAGE_UP: "⇞"
    PG_UP: "⇞"
    PAGE_DOWN: "⇟"
    PG_DN: "⇟"
    UP_ARROW: "↑"
    UP: "↑"
    DOWN_ARROW: "↓"
    DOWN: "↓"
    LEFT_ARROW: "←"
    LEFT: "←"
    RIGHT_ARROW: "→"
    RIGHT: "→"

    # Keyboard & Keypad: Keypad
    KP_ENTER: "$$mdi:keyboard-return$$"

    # Keyboard & Keypad: Keypad → Symbols / Operations
    KP_PLUS: "+"
    KP_MINUS: "-"
    KP_SUBTRACT: "-"
    KP_MULTIPLY: "*"
    KP_ASTERISK: "*"
    KP_DIVIDE: "/"
    KP_SLASH: "/"
    KP_EQUAL: "="
    KP_EQUAL_AS400: "="
    KP_DOT: "."
    KP_COMMA: ","
    KP_LEFT_PARENTHESIS: "("
    KP_LPAR: "("
    KP_RIGHT_PARENTHESIS: ")"
    KP_RPAR: ")"

    # Modifiers
    LEFT_SHIFT: { t: "$$mdi:apple-keyboard-shift$$", type: "held" }
    LSHIFT: { t: "$$mdi:apple-keyboard-shift$$", type: "held" }
    LSHFT: { t: "$$mdi:apple-keyboard-shift$$", type: "held" }
    RIGHT_SHIFT: { t: "$$mdi:apple-keyboard-shift$$", type: "held" }
    RSHIFT: { t: "$$mdi:apple-keyboard-shift$$", type: "held" }
    RSHFT: { t: "$$mdi:apple-keyboard-shift$$", type: "held" }
    LEFT_CONTROL: { t: "$$mdi:apple-keyboard-control$$", type: "held" }
    LCTRL: { t: "$$mdi:apple-keyboard-control$$", type: "held" }
    RIGHT_CONTROL: { t: "$$mdi:apple-keyboard-control$$", type: "held" }
    RCTRL: { t: "$$mdi:apple-keyboard-control$$", type: "held" }
    LEFT_ALT: { t: "$$mdi:apple-keyboard-option$$", type: "held" }
    LALT: { t: "$$mdi:apple-keyboard-option$$", type: "held" }
    RIGHT_ALT: { t: "$$mdi:apple-keyboard-option$$", type: "held" }
    RALT: { t: "$$mdi:apple-keyboard-option$$", type: "held" }
    LEFT_GUI: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LGUI: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LG(code): { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LEFT_WIN: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LWIN: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LEFT_COMMAND: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LCMD: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LEFT_META: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    LMETA: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RIGHT_GUI: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RGUI: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RG(code): { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RIGHT_WIN: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RWIN: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RIGHT_COMMAND: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RCMD: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RIGHT_META: { t: "$$mdi:apple-keyboard-command$$", type: "held" }
    RMETA: { t: "$$mdi:apple-keyboard-command$$", type: "held" }

    # Media: Sound / Volume
    C_VOLUME_UP: "$$mdi:volume-plus$$"
    C_VOL_UP: "$$mdi:volume-plus$$"
    C_VOLUME_DOWN: "$$mdi:volume-minus$$"
    C_VOL_DN: "$$mdi:volume-minus$$"
    C_MUTE: "$$mdi:volume-off$$"

    # Media: Display
    C_BRIGHTNESS_INC: "$$mdi:brightness-7$$"
    C_BRI_INC: "$$mdi:brightness-7$$"
    C_BRI_UP: "$$mdi:brightness-7$$"
    C_BRIGHTNESS_DEC: "$$mdi:brightness-5$$"
    C_BRI_DEC: "$$mdi:brightness-5$$"
    C_BRI_DN: "$$mdi:brightness-5$$"

    # Media: Media Controls
    C_PLAY_PAUSE: "$$mdi:play-pause$$"
    C_PP: "$$mdi:play-pause$$"
    C_STOP: "$$mdi:stop$$"
    C_NEXT: "$$mdi:skip-forward$$"
    C_PREVIOUS: "$$mdi:skip-backward$$"
    C_PREV: "$$mdi:skip-backward$$"

    # Applications: Application Controls
    C_AC_SEARCH: "$$mdi:folder-search-outline$$"
    C_AC_DESKTOP_SHOW_ALL_WINDOWS: "$$mdi:view-dashboard-outline$$"
    C_AC_DESKTOP_SHOW_ALL_APPLICATIONS: "$$mdi:apps$$"
    C_AC_NEXT_KEYBOARD_LAYOUT_SELECT: { t: "$$mdi:web$$", type: "held" }
    GLOBE: { t: "$$mdi:web$$", type: "held" }

    # Power: Power & Lock
    C_POWER: "$$mdi:power$$"
    C_PWR: "$$mdi:power$$"

  # This map is used to replace the raw version of the key with my special
  # representation of them.
  #
  # Whenever I have a custom representation of a behavior, or a key combination
  # as a shortcut, I will add an entry for them here. I use this, also, to tweak
  # the default label for some keys that don't exactly match my layout style.
  raw_binding_map:
    # Layer activation keys
    # These are all located in my base layers (QWERTY and COLEMAK)
    #---------------------------------------------------------------------------
    # Navigation layer
    "&bspcnav":
      {
        t: "$$mdi:backspace$$",
        s: "$$mdi:backspace-reverse$$",
        h: "$$mdi:numeric-1-box-multiple-outline$$",
        type: "held",
      }
    # Number layer
    "&hlr L_NUM SPACE":
      {
        t: "$$mdi:keyboard-space$$",
        h: "$$mdi:numeric-2-box-multiple-outline$$",
        type: "held",
      }
    # Symbols layer
    "&lt L_SYM ESC":
      { t: "⎋", h: "$$mdi:numeric-3-box-multiple-outline$$", type: "held" }
    # Media layer
    "&lt L_MED RET":
      {
        t: "$$mdi:keyboard-return$$",
        h: "$$mdi:numeric-4-box-multiple-outline$$",
        type: "held",
      }
    # Buttons layer
    "&motg_mou": { t: "$$mdi:numeric-5-box-multiple-outline$$", type: "held" }
    "&hll L_MOU Z": { t: "Z", h: "$$mdi:numeric-5-box-multiple-outline$$", type: "held" }
    "&hll L_MOU X": { t: "X", h: "$$mdi:numeric-5-box-multiple-outline$$", type: "held" }
    # Buttons layer
    "&motg_fun": { t: "$$mdi:numeric-6-box-multiple-outline$$", type: "held" }
    "&hlr L_FUN DOT": { t: ".", s: ">", h: "$$mdi:numeric-6-box-multiple-outline$$", type: "held" }
    "&hlr L_FUN FSLH": { t: "/", s: "?", h: "$$mdi:numeric-6-box-multiple-outline$$", type: "held" }
    # Buttons layer
    "&motg_but": { t: "$$mdi:numeric-7-box-multiple-outline$$", type: "held" }
    "&hll L_BUT Z": { t: "Z", h: "$$mdi:numeric-7-box-multiple-outline$$", type: "held" }
    "&hlr L_BUT FSLH": { t: "/", s: "?", h: "$$mdi:numeric-7-box-multiple-outline$$", type: "held" }
    # System layer
    "&motg_sys": { t: "$$mdi:numeric-8-box-multiple-outline$$", type: "held" }
    # Alternative layout
    "&tog L_CMK": "$$mdi:keyboard-variant$$"
    # Lock in-place key
    "&molock": "$$mdi:lock-outline$$"

    # Layer deactivation keys
    # These are keys on the layers themselves that are used to move back to the
    # base layer.
    #---------------------------------------------------------------------------
    "&tog L_NAV": { t: "$$mdi:numeric-1-box-multiple-outline$$", type: "ghost" }
    "&tog L_NUM": { t: "$$mdi:numeric-2-box-multiple-outline$$", type: "ghost" }
    "&tog L_SYM": { t: "$$mdi:numeric-3-box-multiple-outline$$", type: "ghost" }
    "&tog L_MED": { t: "$$mdi:numeric-4-box-multiple-outline$$", type: "ghost" }
    "&tog L_MOU": { t: "$$mdi:numeric-5-box-multiple-outline$$", type: "ghost" }
    "&tog L_FUN": { t: "$$mdi:numeric-6-box-multiple-outline$$", type: "ghost" }
    "&tog L_BUT": { t: "$$mdi:numeric-7-box-multiple-outline$$", type: "ghost" }
    "&butundotog": { t: "$$mdi:undo$$", h: "$$mdi:numeric-7-box-multiple-outline$$", type: "ghost" }
    # NOTE:
    # The System layer have activation keys on both halfs of the keyboard and
    # this breaks the pattern of locking the layer with the System layer key,
    # and toggle them back using the key that activate it. The solution was to
    # remove the System layer toggle from the keyboard, but I left its
    # definition hefe just in case I change my mind in the future.
    "&tog L_SYS": { t: "$$mdi:numeric-8-box-multiple-outline$$", type: "ghost" }
    "&syslocktog": { t: "$$mdi:lock-outline$$", type: "ghost" }

    # Homerow modifiers
    #---------------------------------------------------------------------------
    # QWERTY layer
    "&hml LHRM4 A":    { t: "A",  h: "$$mdi:apple-keyboard-control$$", type: "held" }
    "&hml LHRM3 S":    { t: "S",  h: "$$mdi:apple-keyboard-option$$",  type: "held" }
    "&hml LHRM2 D":    { t: "D",  h: "$$mdi:apple-keyboard-command$$", type: "held" }
    "&hsl LHRM1 F":    { t: "F",  h: "$$mdi:apple-keyboard-shift$$",   type: "held" }
    "&hsr RHRM1 J":    { t: "J",  h: "$$mdi:apple-keyboard-shift$$",   type: "held" }
    "&hmr RHRM2 K":    { t: "K",  h: "$$mdi:apple-keyboard-command$$", type: "held" }
    "&hmr RHRM3 L":    { t: "L",  h: "$$mdi:apple-keyboard-option$$",  type: "held" }
    "&hmr RHRM4 SEMI": { t: ";",  h: "$$mdi:apple-keyboard-control$$", type: "held", s: ":" }
    # COLEMAK layer
    "&hml LHRM3 R":    { t: "R",  h: "$$mdi:apple-keyboard-option$$",  type: "held" }
    "&hml LHRM2 S":    { t: "S",  h: "$$mdi:apple-keyboard-command$$", type: "held" }
    "&hsl LHRM1 T":    { t: "T",  h: "$$mdi:apple-keyboard-shift$$",   type: "held" }
    "&hsr RHRM1 N":    { t: "N",  h: "$$mdi:apple-keyboard-shift$$",   type: "held" }
    "&hmr RHRM2 E":    { t: "E",  h: "$$mdi:apple-keyboard-command$$", type: "held" }
    "&hmr RHRM3 I":    { t: "I",  h: "$$mdi:apple-keyboard-option$$",  type: "held" }
    "&hmr RHRM4 O":    { t: "O",  h: "$$mdi:apple-keyboard-control$$", type: "held" }
    # Navigation layer
    "&mt LHRM1 LG(F)": { s: "⌘F", t: "$$mdi:apple-keyboard-shift$$",   type: "held" }
    "&mt LHRM2 LG(D)": { s: "⌘D", t: "$$mdi:apple-keyboard-command$$", type: "held" }
    "&mt LHRM3 LG(S)": { s: "⌘S", t: "$$mdi:apple-keyboard-option$$",  type: "held" }
    "&mt LHRM4 LG(A)": { s: "⌘A", t: "$$mdi:apple-keyboard-control$$", type: "held" }

    # Behavior Keys
    #---------------------------------------------------------------------------
    # Reset
    "&sys_reset": "$$mdi:restart$$"
    # Bootloader Reset
    "&bootloader": "$$mdi:code-block-tags$$"
    # Bluetooth
    "&bt BT_SEL 0": { t: "$$mdi:bluetooth-connect$$", h: "1" }
    "&bt BT_SEL 1": { t: "$$mdi:bluetooth-connect$$", h: "2" }
    "&bt BT_SEL 2": { t: "$$mdi:bluetooth-connect$$", h: "3" }
    "&bt BT_SEL 3": { t: "$$mdi:bluetooth-connect$$", h: "4" }
    "&bt BT_SEL 4": { t: "$$mdi:bluetooth-connect$$", h: "5" }
    "&bt BT_CLR": "$$mdi:bluetooth-off$$"
    # Output Selection
    "&out OUT_TOG": "$$mdi:usb$$"
    # RGB Underglow
    "&rgb_ug RGB_COLOR_HSB(0, 0, 60)": { t: "$$mdi:palette-outline$$", h: "reset" }
    "&ug_reset": { t: "$$mdi:palette-outline$$", h: "reset", s: "2x: 0" }
    "&rgb_ug RGB_TOG": { t: "$$mdi:palette-outline$$", h: "tog" }
    "&rgb_ug RGB_HUI": { t: "$$mdi:palette-outline$$", h: "hue+" }
    "&rgb_ug RGB_HUD": { t: "$$mdi:palette-outline$$", h: "hue-" }
    "&rgb_ug RGB_SAI": { t: "$$mdi:palette-outline$$", h: "sat+" }
    "&rgb_ug RGB_SAD": { t: "$$mdi:palette-outline$$", h: "sat-" }
    "&rgb_ug RGB_BRI": { t: "$$mdi:palette-outline$$", h: "light+" }
    "&rgb_ug RGB_BRD": { t: "$$mdi:palette-outline$$", h: "light-" }
    # Backlight
    "&bl BL_INC": "$$mdi:lightbulb-on-90$$"
    "&bl_inc": "$$mdi:lightbulb-on-90$$"
    "&bl BL_DEC": "$$mdi:lightbulb-on-20$$"
    "&bl BL_TOG": "$$mdi:lightbulb-off-outline$$"
    "&bl_dec": { t: "$$mdi:lightbulb-on-20$$", s: "2x: off" }
    # Power Management
    "&ext_power EP_TOG": "$$mdi:power-plug-outline$$"

    # Special Keys
    #---------------------------------------------------------------------------
    # Hyper
    "&kp LEFT_HYPER": { t: "HYPER", type: "held" }
    "&kp LHYP": { t: "HYPER", type: "held" }
    "&kp RIGHT_HYPER": { t: "HYPER", type: "held" }
    "&kp RHYP": { t: "HYPER", type: "held" }
    # Meh
    "&kp LEFT_MEH": { t: "MEH", type: "held" }
    "&kp LMEH": { t: "MEH", type: "held" }
    "&kp RIGHT_MEH": { t: "MEH", type: "held" }
    "&kp RMEH": { t: "MEH", type: "held" }
    # Backtab (Shift + Tab)
    "&kp BTAB": "$$mdi:keyboard-tab-reverse$$"

    # Tap-hold keys
    #---------------------------------------------------------------------------
    # Backslash on tap, Globe on hold
    "&globebslh": { t: '\', s: "|", h: "$$mdi:web$$", type: "held" }
    # Equal sign on tap, Globe on hold
    "&hmr GLOBE EQUAL": { t: "=", s: "+", h: "$$mdi:web$$", type: "held" }
    # macOS Redo on tap, Globe on hold
    "&mt GLOBE MAC_REDO": { t: "$$mdi:redo$$", h: "$$mdi:web$$", type: "held" }
    "&appPwinN": { t: "⌘`", s: "⇧⌘⇥" }
    "&appswtnxt": { t: "⌘⇥" }
    "&winPglobe": { t: "$$mdi:web$$", s: "⌘~", type: "held" }

    # Morph keys
    #---------------------------------------------------------------------------
    # Open square brackeds; when tapped while holding Command down: Grave
    "&lbktgrave": { t: "[", s: "{", h: "⌘:`" }

    # Combo keys
    #---------------------------------------------------------------------------
    # CAPS_WORD
    "&caps_word": "$$mdi:apple-keyboard-caps$$"

    # Mouse keys
    #---------------------------------------------------------------------------
    # Mouse movement
    "&mmv MOVE_LEFT": { t: "$$mdi:mouse$$", h: "←" }
    "&mmv MOVE_DOWN": { t: "$$mdi:mouse$$", h: "↓" }
    "&mmv MOVE_UP": { t: "$$mdi:mouse$$", h: "↑" }
    "&mmv MOVE_RIGHT": { t: "$$mdi:mouse$$", h: "→" }
    # Mouse scrollwheel
    "&msc MOVE_X(ZMK_MOUSE_DEFAULT_SCRL_VAL)": { t: "$$mdi:unfold-more-vertical$$", h: "left" }
    "&msc MOVE_Y(ZMK_MOUSE_DEFAULT_SCRL_VAL)": { t: "$$mdi:unfold-more-horizontal$$", h: "down" }
    "&msc MOVE_Y(-ZMK_MOUSE_DEFAULT_SCRL_VAL)": { t: "$$mdi:unfold-more-horizontal$$", h: "up" }
    "&msc MOVE_X(-ZMK_MOUSE_DEFAULT_SCRL_VAL)": { t: "$$mdi:unfold-more-vertical$$", h: "right" }
    # Mouse buttons
    "&mkp LCLK": { t: "$$mdi:mouse-left-click-outline$$", h: "primary" }
    "&mkp MB1": { t: "$$mdi:mouse-left-click-outline$$", h: "primary" }
    "&mkp RCLK": { t: "$$mdi:mouse-right-click-outline$$", h: "right" }
    "&mkp MB2": { t: "$$mdi:mouse-right-click-outline$$", h: "right" }
    "&mkp MCLK": { t: "$$mdi:mouse-right-click-outline$$", h: "middle" }
    "&mkp MB3": { t: "$$mdi:mouse-right-click-outline$$", h: "middle" }

    # Keyboard shortcut combinations
    #---------------------------------------------------------------------------
    # Previous word: ⌥ ←
    "&kp MAC_PREVIOUS_WORD": "$$mdi:format-letter-starts-with$$"
    "&kp MAC_WRDP": "$$mdi:format-letter-starts-with$$"
    # Next word: ⌥ →
    "&kp MAC_NEXT_WORD": "$$mdi:format-letter-ends-with$$"
    "&kp MAC_WRDN": "$$mdi:format-letter-ends-with$$"
    # Start of line: ⌘ ←
    "&kp MAC_START_OF_LINE": "$$mdi:format-pilcrow-arrow-left$$"
    "&kp MAC_STTL": "$$mdi:format-pilcrow-arrow-left$$"
    # End of line: ⌘ →
    "&kp MAC_END_OF_LINE": "$$mdi:format-pilcrow-arrow-right$$"
    "&kp MAC_ENDL": "$$mdi:format-pilcrow-arrow-right$$"
    # Find previous occurrence: ⇧ ⌘ G
    "&kp MAC_FIND_PREVIOUS": { t: "$$mdi:magnify$$", h: "←" }
    "&kp MAC_FDPRV": { t: "$$mdi:magnify$$", h: "←" }
    # Find next occurrence: ⌘ G
    "&kp MAC_FIND_NEXT": { t: "$$mdi:magnify$$", h: "→" }
    "&kp MAC_FDNXT": { t: "$$mdi:magnify$$", h: "→" }
    # Go to Virtual Desktop on the Left: ⌘ ⌃ ←
    "&kp MAC_PREVIOUS_DESKTOP": { t: "$$mdi:window-maximize$$", h: "←" }
    "&kp MAC_DKTP": { t: "$$mdi:window-maximize$$", h: "←" }
    # Go to Virtual Desktop on the Left: ⌘ ⌃ →
    "&kp MAC_NEXT_DESKTOP": { t: "$$mdi:window-maximize$$", h: "→" }
    "&kp MAC_DKTN": { t: "$$mdi:window-maximize$$", h: "→" }
    # Go to next window on current application: ⌘ `
    "&kp MAC_PREVIOUS_WINDOW": { t: "$$mdi:window-restore$$", h: "←" }
    "&kp MAC_WINP": { t: "$$mdi:window-restore$$", h: "←" }
    # Go to previous window on current application: ⌘ ~ (or ⇧ ⌘ `)
    "&kp MAC_NEXT_WINDOW": { t: "$$mdi:window-restore$$", h: "→" }
    "&kp MAC_WINN": { t: "$$mdi:window-restore$$", h: "→" }
    # Show all windows of current application: ⌘ ⌃ ↓
    "&kp MAC_APP_WINDOWS": "$$mdi:dock-window$$"
    "&kp MAC_APPWIN": "$$mdi:dock-window$$"
    # Undo: ⌘ Z
    "&kp MAC_UNDO": "$$mdi:undo$$"
    # Redo: ⇧ ⌘ Z
    "&kp MAC_REDO": "$$mdi:redo$$"
    # Cut: ⌘ X
    "&kp MAC_CUT": "$$mdi:content-cut$$"
    # Copy: ⌘ C
    "&kp MAC_COPY": "$$mdi:content-copy$$"
    # Paste: ⌘ V
    "&kp MAC_PASTE": "$$mdi:content-paste$$"
    "&navcmdz": "⌘Z"
    "&navcmdx": "⌘X"
    "&navcmdc": "⌘C"
    "&navcmdv": "⌘V"
    "&navcmdg": "⌘G"
